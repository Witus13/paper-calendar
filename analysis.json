{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "paper-calendar.js",
      "properties": [
        {
          "name": "_parentResizable",
          "type": "Object | null | undefined",
          "description": "The closest ancestor element that implements `IronResizableBehavior`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 44,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_parentResizableChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_notifyingDescendant",
          "type": "boolean | null | undefined",
          "description": "True if this element is currently notifying its descendant elements of\nresize.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 50,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "selected",
          "type": "number | null | undefined",
          "description": "Selected date. Use Unix timestamp (in ms).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_selectedChanged\"",
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "events",
          "type": "Array | null | undefined",
          "description": "Events to display. Check events section of description",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_renderEvents\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "firstDay",
          "type": "number | null | undefined",
          "description": "First day of the week. 0 = Sunday, 1 = Monday, etc. Overrides locale.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "selectable",
          "type": "boolean | null | undefined",
          "description": "If set to true, user can click on values. Even if false, provided `selected` value will be selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "selectedMonth",
          "type": "number | null | undefined",
          "description": "Currently displayed month. Use unix timestamp (in ms).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_monthChanged\"",
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "swipeable",
          "type": "boolean | null | undefined",
          "description": "Allow user to swipe left/right to switch months.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 251,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_setupMoveListeners\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "swipeDirection",
          "type": "string | null | undefined",
          "description": "Direction in which user can swipe. Available: `'horizontal'`, `'vertical'`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 4
            },
            "end": {
              "line": 260,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_switchTranslateDir\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"horizontal\""
        },
        {
          "name": "allowTextSelection",
          "type": "boolean | null | undefined",
          "description": "Allow user to select text in widget. This can potentially break `swipeable`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 269,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "Locale string (eg. en, fr, de, ja).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 4
            },
            "end": {
              "line": 280,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_days",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 4
            },
            "end": {
              "line": 282,
              "column": 16
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "_template",
          "type": "template",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 2
            },
            "end": {
              "line": 188,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        }
      ],
      "methods": [
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 60,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 68,
              "column": 2
            },
            "end": {
              "line": 70,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 72,
              "column": 2
            },
            "end": {
              "line": 81,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "notifyResize",
          "description": "Can be called to manually notify a resizable and its descendant\nresizables of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 99,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "assignParentResizable",
          "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "stopResizeNotificationsFor",
          "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 123,
              "column": 2
            },
            "end": {
              "line": 130,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_subscribeIronResize",
          "description": "Subscribe this element to listen to iron-resize events on the given target.\n\nPreferred over target.listen because the property renamer does not\nunderstand to rename when the target is not specifically \"this\"",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 142,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target",
              "type": "!HTMLElement",
              "description": "Element to listen to for iron-resize events."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_unsubscribeIronResize",
          "description": "Unsubscribe this element from listening to to iron-resize events on the\ngiven target.\n\nPreferred over target.unlisten because the property renamer does not\nunderstand to rename when the target is not specifically \"this\"",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 153,
              "column": 2
            },
            "end": {
              "line": 156,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target",
              "type": "!HTMLElement",
              "description": "Element to listen to for iron-resize events."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "resizerShouldNotify",
          "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 169,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "HTMLElement",
              "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the `element` should be notified of resize."
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_onDescendantIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 171,
              "column": 2
            },
            "end": {
              "line": 181,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_fireResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 183,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_onIronRequestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 197,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_parentResizableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 199,
              "column": 2
            },
            "end": {
              "line": 203,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_notifyDescendant",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 205,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "descendant"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_requestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 257,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_findParent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 259,
              "column": 2
            },
            "end": {
              "line": 271,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 2
            },
            "end": {
              "line": 294,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 2
            },
            "end": {
              "line": 323,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showCalendars",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 2
            },
            "end": {
              "line": 338,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_renderCalendar",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 340,
              "column": 2
            },
            "end": {
              "line": 385,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_monthChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 2
            },
            "end": {
              "line": 389,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal"
            },
            {
              "name": "oldVal"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setupMoveListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 391,
              "column": 2
            },
            "end": {
              "line": 399,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "swipeable"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleTrack",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 401,
              "column": 2
            },
            "end": {
              "line": 473,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_switchTranslateDir",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 475,
              "column": 2
            },
            "end": {
              "line": 492,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_translateX",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 494,
              "column": 2
            },
            "end": {
              "line": 497,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "elem"
            },
            {
              "name": "x"
            },
            {
              "name": "transition"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_translateY",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 499,
              "column": 2
            },
            "end": {
              "line": 502,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "elem"
            },
            {
              "name": "y"
            },
            {
              "name": "transition"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 504,
              "column": 2
            },
            "end": {
              "line": 524,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_renderEvents",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 526,
              "column": 2
            },
            "end": {
              "line": 561,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "events"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_tapped",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 563,
              "column": 2
            },
            "end": {
              "line": 580,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 186,
          "column": 8
        },
        "end": {
          "line": 582,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "selected",
          "description": "Selected date. Use Unix timestamp (in ms).",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "events",
          "description": "Events to display. Check events section of description",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "first-day",
          "description": "First day of the week. 0 = Sunday, 1 = Monday, etc. Overrides locale.",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "selectable",
          "description": "If set to true, user can click on values. Even if false, provided `selected` value will be selected.",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected-month",
          "description": "Currently displayed month. Use unix timestamp (in ms).",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "swipeable",
          "description": "Allow user to swipe left/right to switch months.",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 251,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "swipe-direction",
          "description": "Direction in which user can swipe. Available: `'horizontal'`, `'vertical'`.",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 4
            },
            "end": {
              "line": 260,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "allow-text-selection",
          "description": "Allow user to select text in widget. This can potentially break `swipeable`",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 269,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "locale",
          "description": "Locale string (eg. en, fr, de, ja).",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 4
            },
            "end": {
              "line": 280,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-month-changed",
          "description": "Fired when the `selectedMonth` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "paper-calendar"
    }
  ]
}
